on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Instalar dependências e Appium
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk
          sudo apt-get install -y nodejs npm wget unzip
          npm install -g appium
          appium -v  # Confirma que o Appium foi instalado corretamente

      - name: Instalar Android SDK e configurar ambiente
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O android-sdk.zip
          sudo mkdir -p /usr/local/android-sdk/cmdline-tools
          sudo unzip android-sdk.zip -d /usr/local/android-sdk/cmdline-tools
          sudo mv /usr/local/android-sdk/cmdline-tools/cmdline-tools /usr/local/android-sdk/cmdline-tools/latest
          export ANDROID_HOME=/usr/local/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-30" "system-images;android-30;google_apis;x86"

      - name: Criar e iniciar um emulador Android
        run: |
          echo "no" | avdmanager create avd -n test_emulator -k "system-images;android-30;google_apis;x86" --device "pixel"
          emulator -avd test_emulator -no-audio -no-window &  
          adb wait-for-device  # Aguarda o emulador iniciar

      - name: Iniciar o Appium Server
        run: |
          appium --log appium.log &  
          sleep 10  # Espera o Appium iniciar antes de rodar os testes

      - name: Executar testes com Maven
        run: mvn clean test
