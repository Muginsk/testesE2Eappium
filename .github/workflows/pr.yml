name: pr

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar ambiente
        run: |
          # Atualizar e instalar dependências
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk wget unzip lib32z1 lib32ncurses6 lib32stdc++6

          # Definir o diretório do SDK
          ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          
          # Baixar sdkmanager se não existir
          if [ ! -d "$ANDROID_SDK_ROOT/cmdline-tools/latest" ]; then
            echo "Baixando sdkmanager..."
            wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
            unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools/
            rm cmdline-tools.zip
          fi
          
          # Criando o diretório latest, se necessário
          if [ ! -d "$ANDROID_SDK_ROOT/cmdline-tools/latest" ]; then
            echo "Criando diretório 'latest' manualmente..."
            mv $ANDROID_SDK_ROOT/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest
          fi
          
          # Baixar platform-tools, emulador e system-image x86_64
          echo "Baixando platform-tools, emulador e system-image..."
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --update
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "emulator" "system-images;android-30;default;x86_64" --install
          
          # Adicionando sdkmanager, platform-tools e emulator ao PATH
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$PATH
          echo "Adicionando sdkmanager, platform-tools e emulator ao PATH..."

          # Verificando sdkmanager, adb e emulator
          which sdkmanager || echo "sdkmanager não encontrado"
          which adb || echo "adb não encontrado"
          which emulator || echo "emulator não encontrado"

          # Verificar se adb está disponível
          adb devices || echo "adb devices falhou"

      - name: Verificar se imagem do sistema está instalada
        run: |
          echo "Verificando imagens do sistema..."
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list | grep "system-images;android-30;default;x86_64" || echo "Imagem do sistema 'android-30' não encontrada!"

      - name: Criar e iniciar emulador Android
        run: |
          echo "Criando e iniciando emulador..."
          
          # Verificar se a system image foi instalada corretamente
          if ! $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list | grep -q "system-images;android-30;default;x86_64"; then
            echo "Imagem do sistema 'system-images;android-30;default;x86_64' não encontrada! Instalando..."
            $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "system-images;android-30;default;x86_64" --install
          else
            echo "Imagem do sistema 'system-images;android-30;default;x86_64' já instalada!"
          fi

          # Criando o AVD com um caminho alternativo
          echo "Criando o AVD 'TestAVD'..."
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd -n TestAVD -k "system-images;android-30;default;x86_64" --device "pixel" --force --sdcard 512M

          # Verificar se o AVD foi criado corretamente
          echo "Listando AVDs disponíveis..."
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager list avd

          # Iniciar o emulador
          nohup $ANDROID_SDK_ROOT/emulator/emulator -avd TestAVD -no-snapshot-load -no-audio -no-window &

          # Esperar o emulador carregar e fazer o desbloqueio da tela
          sleep 60  # Esperar o emulador carregar
          adb wait-for-device
          adb shell input keyevent 82  # Desbloquear tela

      - name: Executar testes automatizados
        run: mvn test

      - name: Upload de screenshots em caso de falha
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: $GITHUB_WORKSPACE/test-output
