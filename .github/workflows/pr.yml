name: Testes E2E Appium

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: /usr/local/android-sdk
      PATH: /usr/local/android-sdk/cmdline-tools/latest/bin:/usr/local/android-sdk/platform-tools:/usr/local/android-sdk/emulator:$PATH

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar ambiente
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk wget unzip
          npm install -g appium

      - name: Instalar Android SDK e ferramentas
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          sudo mkdir -p $ANDROID_HOME/cmdline-tools
          sudo unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          sudo mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm cmdline-tools.zip
          yes | sdkmanager --licenses
          sdkmanager --update
          sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "system-images;android-30;google_apis;x86_64" "emulator"

      - name: Criar e iniciar emulador Android
        run: |
          echo "no" | avdmanager create avd -n test_avd -k "system-images;android-30;google_apis;x86_64"
          nohup emulator -avd test_avd -no-window -no-audio -no-boot-anim &

      - name: Aguardar inicialização do emulador
        run: |
          boot_completed=""
          while [ -z "$boot_completed" ]; do
            sleep 5
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null)
          done
          echo "Emulador pronto!"

      - name: Iniciar o Appium Server
        run: |
          nohup appium --log appium.log &
          sleep 10

      - name: Executar testes
        run: mvn test
